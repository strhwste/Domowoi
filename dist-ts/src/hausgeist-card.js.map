{"version":3,"file":"hausgeist-card.js","sourceRoot":"","sources":["../../src/hausgeist-card.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAkB,MAAM,KAAK,CAAC;AACvD,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,mBAAmB,EAAE,MAAM,SAAS,CAAC;AAC9C,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C,OAAO,EAAE,MAAM,yBAAyB,CAAC;AACzC,OAAO,EAAE,MAAM,yBAAyB,CAAC;AACzC,OAAO,yBAAyB,CAAC;AACjC,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAClC,OAAO,EAAE,OAAO,EAAiB,MAAM,YAAY,CAAC;AAIpD,MAAM,YAAY,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAIzB,IAAM,aAAa,GAAnB,MAAM,aAAc,SAAQ,UAAU;IAAtC;;QAE8B,WAAM,GAcrC,EAAE,CAAC;QAC6B,UAAK,GAAG,KAAK,CAAC;QACd,WAAM,GAAG,KAAK,CAAC;QAChB,kBAAa,GAAG,IAAI,CAAC;QACrB,cAAS,GAAG,EAAE,CAAC;QA4C1C,UAAK,GAA2B,YAAY,CAAC,IAAI,CAAC,CAAC;QACnD,UAAK,GAAG,KAAK,CAAC;QAId,YAAO,GAAW,EAAE,CAAC;QACrB,mBAAc,GAAY,KAAK,CAAC;QACxC,4DAA4D;QACpD,qBAAgB,GAAW,IAAI,CAAC;IAqgB1C,CAAC;IApjBC,wBAAwB;IACjB,MAAM,CAAC,KAAK,CAAC,gBAAgB;QAClC,OAAO,QAAQ,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACzD,CAAC;IAED,gCAAgC;IACzB,MAAM,CAAC,aAAa;QACzB,OAAO;YACL,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,KAAK;YACb,aAAa,EAAE,IAAI;YACnB,cAAc,EAAE,EAAE;YAClB,0BAA0B,EAAE,CAAC;YAC7B,oBAAoB,EAAE,EAAE;SACzB,CAAC;IACJ,CAAC;IAED,iDAAiD;IACjD,SAAS,CAAC,MAAW;QACnB,0BAA0B;QAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,6BAA6B;QAC7B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC;QAEnC,0CAA0C;QAC1C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,KAAK,CAAC;QAErC,iCAAiC;QACjC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC;QAElD,6BAA6B;QAC7B,IAAI,MAAM,CAAC,SAAS,EAAE,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QACpC,CAAC;IACH,CAAC;IAcD,KAAK,CAAC,iBAAiB;QACrB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAE1B,IAAI,CAAC;YACH,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;YAC5D,CAAC;YAED,IAAI,KAAK,CAAC;YACV,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;oBACf,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;gBACtD,CAAC;gBACD,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACrC,CAAC;iBAAM,CAAC;gBACN,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;oBACf,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;gBAC9D,CAAC;gBACD,KAAK,GAAG,MAAM,SAAS,EAAE,CAAC;YAC5B,CAAC;YAED,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;gBACpC,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;gBAC1D,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,OAAO;YACT,CAAC;YAED,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;YAClD,CAAC;YAED,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC;YACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAElB,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,GAAG,CAAC,wDAAwD,CAAC,CAAC;YACxE,CAAC;YAED,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,sCAAsC,EAAE,KAAK,CAAC,CAAC;YAC7D,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;IACH,CAAC;IAED,yDAAyD;IACzD,OAAO,CAAC,YAA4B;QAClC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAC5B,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,EAAE,aAAa,CAAC,qBAAqB,CAAgB,CAAC;QACvF,IAAI,SAAS,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC;gBACzB,SAAS;gBACT,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,IAAI,kBAAkB;gBAC3D,MAAM,EAAE,GAAG,EAAE;oBACX,IAAI,CAAC,OAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAiC,CAAC,CAAC;oBAClE,IAAI,CAAC,OAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACrC,CAAC;aACF,CAAC,CAAC;QACL,CAAC;QACD,IAAI,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YAC9B,MAAM,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC,SAAS,CAAgB,CAAC;YACzD,IAAI,IAAI,EAAE,CAAC;gBACT,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,IAAI,GAAG,CAAC;gBACtC,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gBACpD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;gBACnC,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;gBACrC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC;YACzC,CAAC;QACH,CAAC;IACH,CAAC;IAED,oBAAoB;QAClB,KAAK,CAAC,oBAAoB,EAAE,CAAC;QAC7B,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QAC3B,CAAC;IACH,CAAC;IAEO,cAAc;QACpB,oDAAoD;QACpD,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,OAAO,4DAA4D,CAAC;QACtE,CAAC;QACD,+DAA+D;QAC/D,IAAI,IAAI,CAAC,OAAO;YAAE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtC,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACjB,OAAO,IAAI,CAAA;;;;iBAIA,CAAC;QACd,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAA;;;;iBAIA,CAAC;QACd,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAChC,OAAO,IAAI,CAAA;;;;iBAIA,CAAC;QACd,CAAC;QAED,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAA,mDAAmD,CAAC,CAAC,CAAC,EAAE,CAAC;QAC9F,MAAM,QAAQ,GAAa,EAAE,CAAC;QAE9B,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7B,wDAAwD;QACxD,MAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC;QAEjF,gEAAgE;QAChE,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;QACpC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC1C,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAgB,EAAE,EAAE,CAAC,CAAC;gBAC1E,OAAO,EAAE,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE;gBACrB,OAAO,EAAE,IAAI;aACd,CAAC,CAAC,CAAC;QACN,CAAC;QAED,uBAAuB;QACvB,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC;QAE/C,0CAA0C;QAC1C,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACvB,OAAO,IAAI,CAAA;;;;;iBAKA,CAAC;QACd,CAAC;QAED,MAAM,OAAO,GAAa,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACpD,MAAM,SAAS,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QACxD,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,cAAc,IAAI,EAAE,CAAC;QACnE,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,cAAc,CAAC;QAGnE,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,QAAQ,CAAC,IAAI,CAAC,yBAAyB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;YAC9F,QAAQ,CAAC,IAAI,CAAC,0BAA0B,aAAa,EAAE,CAAC,CAAC;QAC3D,CAAC;QAGD,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC;QAChD,MAAM,OAAO,GAAG,IAAiC,CAAC;QAClD,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACxD,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC;QAED,oDAAoD;QACpD,MAAM,YAAY,GAA2B,EAAE,CAAC;QAChD,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAE1D,MAAM,YAAY,GAIZ,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACzB,MAAM,OAAO,GAAG,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YACvD,MAAM,WAAW,GAAsD,EAAE,CAAC;YAE1E,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,QAAQ,CAAC,IAAI,CAAC,oBAAoB,IAAI,EAAE,CAAC,CAAC;gBAC1C,QAAQ,CAAC,IAAI,CAAC,sBAAsB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAClF,QAAQ,CAAC,IAAI,CAAC,yBAAyB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;gBACzF,QAAQ,CAAC,IAAI,CAAC,0BAA0B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YACvF,CAAC;YAED,uDAAuD;YACvD,MAAM,UAAU,GAAG,CAAC,GAAiC,EAAE,EAAE;gBACvD,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,CAAC,CAAC;YAC/D,CAAC,CAAC;YACF,uGAAuG;YACvG,MAAM,mBAAmB,GAAqC;gBAC5D,aAAa,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,aAAa,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,UAAU;aACzK,CAAC;YACF,8FAA8F;YAC9F,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,MAAM,GAAG,GAAG,CAAC,GAAiC,EAAE,EAAE;gBAChD,MAAM,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC1B,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACzC,CAAC,CAAC;YACF,mDAAmD;YACnD,MAAM,SAAS,GAAG,CAAC,EAAuB,EAAE,EAAE;gBAC5C,MAAM,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACnC,OAAO,KAAK,CAAC,CAAC,CAAE,KAAa,CAAC,CAAC,CAAC,SAAS,CAAC;YAC5C,CAAC,CAAC;YACF,6DAA6D;YAC7D,oBAAoB;YACpB,4FAA4F;YAC5F,MAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,aAAa,IAAI,cAAc,CAAC;YACtF,MAAM,OAAO,GAAG,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,eAAe,CAAC,CAAC;YACvE,MAAM,iBAAiB,GAAG,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC;YACpD,MAAM,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YAEvD,MAAM,OAAO,GAAwB;gBACnC,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK,IAAI,aAAa,CAAC;gBAC3I,IAAI,EAAE,GAAG,CAAC,aAAa,CAAC;gBACxB,QAAQ,EAAE,GAAG,CAAC,UAAU,CAAC;gBACzB,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC;gBACf,MAAM,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK;gBACrG,OAAO,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK;gBACvG,YAAY,EAAE,MAAM,CAAC,iBAAiB,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,IAAI,EAAE,CAAC;gBAC7F,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK,KAAK,IAAI;gBACnH,aAAa,EAAE,MAAM,CAAC,QAAQ,CAAC,WAAW,IAAI,EAAE,CAAC;gBACjD,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC;gBAClH,cAAc,EAAE,IAAI,CAAC,aAAa;gBAClC,gBAAgB,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,EAAE,MAAM,CAAC;gBAC7D,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE;gBACf,OAAO,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK;gBACvG,KAAK,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK;gBACnG,kBAAkB,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;gBACnN,SAAS,EAAE,OAAO,QAAQ,CAAC,aAAa,KAAK,QAAQ,IAAI,QAAQ,CAAC,aAAa,GAAG,CAAC;gBACnF,WAAW,EAAE,CAAC,GAAG,EAAE;oBACjB,MAAM,eAAe,GAAG,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK,CAAC;oBAC3H,OAAO,eAAe,KAAK,SAAS,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC;gBACrE,CAAC,CAAC,EAAE;gBACJ,YAAY,EAAE,QAAQ,CAAC,SAAS,KAAK,OAAO;gBAC5C,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,MAAM,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK,KAAK,IAAI;gBAC9G,IAAI,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK;aAClG,CAAC;YAEF,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC/D,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,QAAQ,CAAC,IAAI,CACX,OAAO,IAAI,QAAQ;oBACnB,iBAAiB;oBACjB,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;oBAC7E,oBAAoB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI;oBACrE,kBAAkB,KAAK,CAAC,MAAM,IAAI;oBAClC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAO,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,KAAK,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CACvE,CAAC;YACJ,CAAC;YACD,OAAO,EAAE,IAAI,EAAE,YAAY,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,oCAAoC;QACpC,MAAM,WAAW,GAAG,YAAY;aAC7B,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;aACjC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;YACT,8CAA8C;YAC9C,MAAM,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE,CAC1C,CAAC,SAAS,CAAC,CAAC,CAAC,QAAkC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,QAAkC,CAAC,IAAI,CAAC,CAAC,CAChH,CAAC,CAAC,CAAC,CAAC;YACL,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;gBAC7B,OAAO,SAAS,CAAC,CAAC,2BAA2B;YAC/C,CAAC;YACD,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,QAAQ,MAAM,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;YACnF,CAAC;YACD,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;QAC9D,CAAC,CAAC;aACD,MAAM,CAAC,CAAC,CAAC,EAAoF,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAExG,MAAM,cAAc,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CACnD,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,aAAa,CAAC,CAChE,CAAC;QACF,MAAM,eAAe,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAErE,+CAA+C;QAC/C,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,eAAe,GAAG,IAAI,CAAC;QAC3B,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,UAAU,GAAG,4DAA4D,CAAC;YAC1E,eAAe,GAAG,OAAO,CAAC;QAC5B,CAAC;aAAM,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAClC,UAAU,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YACpF,eAAe,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC;QACpD,CAAC;QACD,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;QAC1B,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;QACxC,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,eAAgC,CAAC,CAAC;YAC3D,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAClC,CAAC;QACD,OAAO,IAAI,CAAA;;;;;;;;;;;;;QAaP,WAAW;;;;YAIP,CAAC,cAAc;YACf,CAAC,CAAC,IAAI,CAAA,+LAA+L;YACrM,CAAC,CAAC,CAAC,eAAe;gBAChB,CAAC,CAAC,IAAI,CAAA,gFAAgF;gBACtF,CAAC,CAAC,IAAI,CAAA;kBACF,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAA;8BACb,CAAC,CAAC,QAAQ;yBACf,CAAC,CAAC,IAAI,SAAS,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,yBAAyB,CAAC,CAAC,WAAW,EAAE;;iBAE9F,CAAC;eAER;YACE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAA;iCACI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;;;;kBAIpC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAA;2BACvB,OAAO,CAAC,IAAI;;wBAEf,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAA,QAAQ,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,KAAK,OAAO,CAAC;;;iBAG1F,CAAC;;;WAGP,CAAC,CAAC,CAAC,EAAE;;;KAGX,CAAC;IACJ,CAAC;IAED,yEAAyE;IACjE,aAAa,CACnB,IAAY,EACZ,WAAmE,EACnE,MAAa,EACb,aAAqB,EACrB,aAAqB;QAErB,4CAA4C;QAC5C,MAAM,UAAU,GAAG,CAAC,IAAY,EAAE,EAAE;YAClC,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;QAC3D,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,CAAC,IAAY,EAAE,EAAE;YAC3B,MAAM,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;YAC3B,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACzC,CAAC,CAAC;QAEF,MAAM,SAAS,GAAG,CAAC,EAAuB,EAAE,EAAE;YAC5C,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC9B,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;QACnC,CAAC,CAAC;QAEF,mBAAmB;QACnB,MAAM,OAAO,GAAG,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,aAAa,CAAC,CAAC;QACrE,MAAM,iBAAiB,GAAG,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC;QACpD,MAAM,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAEvD,MAAM,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;QAEvE,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,MAAM;YACN,IAAI,EAAE,GAAG,CAAC,aAAa,CAAC;YACxB,aAAa,EAAE,GAAG,CAAC,eAAe,CAAC;YACnC,QAAQ,EAAE,GAAG,CAAC,UAAU,CAAC;YACzB,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC;YACf,MAAM,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK;YACrG,OAAO,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK;YACvG,MAAM,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK,KAAK,IAAI;YAC9G,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK,KAAK,IAAI;YACnH,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC;YAClH,cAAc,EAAE,IAAI,CAAC,aAAa;YAClC,gBAAgB,EAAE,CAAC;YACnB,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE;YACf,OAAO,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK;YACvG,KAAK,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK;YAEnG,4CAA4C;YAC5C,YAAY,EAAE,MAAM,CAAC,iBAAiB,CAAC,WAAW,IAAI,EAAE,CAAC;YACzD,aAAa,EAAE,MAAM,CAAC,QAAQ,CAAC,WAAW,IAAI,EAAE,CAAC;YACjD,SAAS,EAAE,CAAC,QAAQ,CAAC,aAAa,IAAI,CAAC,CAAC,GAAG,CAAC;YAC5C,YAAY,EAAE,QAAQ,CAAC,SAAS,KAAK,OAAO;YAE5C,yBAAyB;YACzB,kBAAkB,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC;YACvK,WAAW,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK,IAAI,SAAS;SAC7H,CAAC;IACJ,CAAC;IAEO,wBAAwB,CAAC,IAAY,EAAE,MAAa;QAC1D,IAAI,CAAC;YACH,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CACjC,CAAC,CAAC,UAAU,EAAE,OAAO,KAAK,IAAI,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,CACtE,CAAC;YACF,IAAI,UAAU,EAAE,CAAC;gBACf,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;gBACnG,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC;oBACxB,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7C,MAAM,QAAQ,GAAG,CAAC,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,CAAC,sBAAsB;oBAC1F,IAAI,QAAQ,GAAG,CAAC,EAAE,CAAC;wBACjB,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;oBACpD,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,4CAA4C,EAAE,KAAK,CAAC,CAAC;QACrE,CAAC;QACD,OAAO,CAAC,CAAC,CAAC,oCAAoC;IAChD,CAAC;IAEO,qBAAqB,CAAC,IAAY,EAAE,MAAa,EAAE,aAAqB;QAC9E,IAAI,CAAC;YACH,6CAA6C;YAC7C,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC;YACxD,IAAI,QAAQ,EAAE,CAAC;gBACb,MAAM,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,QAAQ,CAAC,CAAC;gBAClE,IAAI,cAAc,EAAE,CAAC;oBACnB,MAAM,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;oBAC3C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC;wBAClB,OAAO,KAAK,CAAC;oBACf,CAAC;gBACH,CAAC;YACH,CAAC;YAED,oDAAoD;YACpD,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CACnC,CAAC,CAAC,UAAU,EAAE,OAAO,KAAK,IAAI,IAAI;YAChC,+BAA+B;YAC/B,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,WAAW,KAAK,SAAS,CAAC;gBAC/E,+CAA+C;gBAC/C,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC;gBACnC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,oBAAoB,CAAC;gBAC1C,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CACjC,CACF,CAAC;YAEF,IAAI,YAAY,EAAE,CAAC;gBACjB,iEAAiE;gBACjE,IAAI,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC;oBAClD,OAAO,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;gBACrD,CAAC;gBACD,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACpC,CAAC;YAED,mDAAmD;YACnD,OAAO,aAAa,CAAC;QACvB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;QAC5D,CAAC;QACD,OAAO,aAAa,CAAC,CAAC,mCAAmC;IAC3D,CAAC;IAED,iEAAiE;IACzD,WAAW,CACjB,OAAqF,EACrF,IAAY,EACZ,WAAmE,EACnE,UAAkB;QAElB,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,GAAG,CAAC,6BAA6B,UAAU,YAAY,IAAI,EAAE,CAAC,CAAC;YACvE,OAAO,CAAC,GAAG,CAAC,kCAAkC,IAAI,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YACxF,iFAAiF;QACnF,CAAC;QAED,yCAAyC;QACzC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QAChE,IAAI,UAAU,EAAE,CAAC;YACf,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,UAAU,CAAC,CAAC;YAC/D,IAAI,MAAM,EAAE,CAAC;gBACX,WAAW,CAAC,IAAI,CAAC;oBACf,IAAI,EAAE,GAAG,UAAU,aAAa;oBAChC,SAAS,EAAE,MAAM,CAAC,SAAS;oBAC3B,KAAK,EAAE,MAAM,CAAC,KAAK;iBACpB,CAAC,CAAC;gBACH,OAAO,MAAM,CAAC;YAChB,CAAC;YACD,IAAI,IAAI,CAAC,KAAK;gBAAE,OAAO,CAAC,GAAG,CAAC,iCAAiC,UAAU,YAAY,CAAC,CAAC;QACvF,CAAC;QAED,6DAA6D;QAC7D,0DAA0D;QAC1D,gBAAgB;QAChB,gEAAgE;QAChE,kBAAkB;QAClB,yBAAyB;QACzB,sCAAsC;QACtC,qCAAqC;QACrC,4BAA4B;QAC5B,UAAU;QACV,qBAAqB;QACrB,MAAM;QACN,kFAAkF;QAClF,IAAI;QAEJ,eAAe;QACf,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,WAAW,CAAC,IAAI,CAAC;gBACf,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,aAAa;gBACxB,KAAK,EAAE,0BAA0B;aAClC,CAAC,CAAC;QACL,CAAC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;;AArjBM,oBAAM,GAAG,MAAM,AAAT,CAAU;AAtBY;IAAlC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;2CAAkB;AACV;IAAlC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;6CAcpB;AAC6B;IAAnC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;4CAAsB;AACd;IAAnC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;6CAAuB;AAChB;IAAlC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;oDAA6B;AACrB;IAAlC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;gDAAuB;AApBvC,aAAa;IADzB,aAAa,CAAC,gBAAgB,CAAC;GACnB,aAAa,CA6kBzB;;AAED,qGAAqG;AACrG,uEAAuE","sourcesContent":["import { LitElement, html, PropertyValues } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { RuleEngine } from './rule-engine';\nimport { filterSensorsByArea } from './utils';\nimport { loadRules } from './plugin-loader';\nimport { SENSOR_KEYWORDS } from './sensor-keywords';\nimport en from '../translations/en.json';\nimport de from '../translations/de.json';\nimport './hausgeist-card-editor';\nimport { styles } from './styles';\nimport { Ghost3D, GhostPriority } from './ghost-3d';\n\ndeclare module 'three/examples/jsm/loaders/GLTFLoader.js';\n\nconst TRANSLATIONS = { de, en };\n\n\n@customElement('hausgeist-card')\nexport class HausgeistCard extends LitElement {\n  @property({ type: Object }) public hass: any;\n  @property({ type: Object }) public config: { \n    area_id?: string; \n    overrides?: any; \n    auto?: any; \n    debug?: boolean; \n    notify?: boolean; \n    highThreshold?: number; \n    rulesJson?: string; \n    areas?: Array<{ area_id: string; name: string; enabled?: boolean }>;\n    weather_entity?: string;\n    default_target?: number;\n    default_adjacent_room_temp?: number;\n    default_outside_temp?: number;\n    ghost_model_url?: string;\n  } = {};\n  @property({ type: Boolean }) public debug = false;\n  @property({ type: Boolean }) public notify = false;\n  @property({ type: Number }) public highThreshold = 2000;\n  @property({ type: String }) public rulesJson = '';\n\n\n  static styles = styles;\n\n  // Support the editor UI\n  public static async getConfigElement() {\n    return document.createElement('hausgeist-card-editor');\n  }\n\n  // Provide default configuration\n  public static getStubConfig() {\n    return {\n      debug: false,\n      notify: false,\n      highThreshold: 2000,\n      default_target: 21,\n      default_adjacent_room_temp: 0,\n      default_outside_temp: 15\n    };\n  }\n\n  // Add required setConfig method for custom cards\n  setConfig(config: any) {\n    // Store the configuration\n    this.config = config;\n    \n    // Set debug flag from config\n    this.debug = config.debug ?? false;\n    \n    // Set notification preference from config\n    this.notify = config.notify ?? false;\n    \n    // Set high threshold from config\n    this.highThreshold = config.highThreshold ?? 2000;\n    \n    // Set rules JSON if provided\n    if (config.rulesJson) {\n      this.rulesJson = config.rulesJson;\n    }\n  }\n\n\n  private engine?: RuleEngine;\n  private texts: Record<string, string> = TRANSLATIONS['de'];\n  private ready = false;\n\n  // Ghost3D instance\n  private ghost3D?: Ghost3D;\n  private lastTip: string = '';\n  private ghostLoadError: boolean = false;\n  // 1. Animationen & Emotionen: Ghost-Farbe je nach Priorität\n  private _currentPriority: string = 'ok';\n\n  async connectedCallback() {\n    super.connectedCallback();\n    \n    try {\n      if (this.debug) {\n        console.log('[Hausgeist] Connected callback starting...');\n      }\n\n      let rules;\n      if (this.rulesJson) {\n        if (this.debug) {\n          console.log('[Hausgeist] Using provided rulesJson');\n        }\n        rules = JSON.parse(this.rulesJson);\n      } else {\n        if (this.debug) {\n          console.log('[Hausgeist] Loading rules from plugin-loader');\n        }\n        rules = await loadRules();\n      }\n      \n      if (!rules || !Array.isArray(rules)) {\n        console.error('[Hausgeist] Invalid rules format:', rules);\n        this.ready = false;\n        return;\n      }\n\n      if (this.debug) {\n        console.log('[Hausgeist] Loaded rules:', rules);\n      }\n\n      this.engine = new RuleEngine(rules);\n      this.ready = true;\n      \n      if (this.debug) {\n        console.log('[Hausgeist] Initialization complete, requesting update');\n      }\n      \n      this.requestUpdate();\n    } catch (error) {\n      console.error('[Hausgeist] Error initializing card:', error);\n      this.ready = false;\n    }\n  }\n\n  // Canvas-Initialisierung nach jedem Render sicherstellen\n  updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n    const container = this.renderRoot?.querySelector('.ghost-3d-container') as HTMLElement;\n    if (container && !this.ghost3D) {\n      this.ghost3D = new Ghost3D({\n        container,\n        modelUrl: this.config.ghost_model_url || '/local/ghost.glb',\n        onLoad: () => {\n          this.ghost3D!.setPriority(this._currentPriority as GhostPriority);\n          this.ghost3D!.setTip(this.lastTip);\n        }\n      });\n    }\n    if (container && this.ghost3D) {\n      const card = container.closest('ha-card') as HTMLElement;\n      if (card) {\n        const width = card.offsetWidth || 200;\n        const height = Math.max(160, Math.round(width * 1));\n        this.ghost3D.resize(width, height);\n        container.style.width = width + 'px';\n        container.style.height = height + 'px';\n      }\n    }\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this.ghost3D) {\n      this.ghost3D.dispose();\n      this.ghost3D = undefined;\n    }\n  }\n\n  private _getCurrentTip(): string {\n    // Finde den aktuellen Tipp (wie bisher in render())\n    if (this.ghostLoadError) {\n      return 'Geist-Modell nicht gefunden! Bitte ghost_model_url prüfen.';\n    }\n    // Versuche, den aktuellen Tipp aus dem letzten Render zu holen\n    if (this.lastTip) return this.lastTip;\n    return '';\n  }\n\n  render() {\n    if (!this.config) {\n      return html`<ha-card>\n        <div class=\"card-content\">\n          <p>Invalid configuration</p>\n        </div>\n      </ha-card>`;\n    }\n\n    if (!this.hass) {\n      return html`<ha-card>\n        <div class=\"card-content\">\n          <p>Home Assistant not available</p>\n        </div>\n      </ha-card>`;\n    }\n\n    if (!this.engine || !this.ready) {\n      return html`<ha-card>\n        <div class=\"card-content\">\n          <p>Loading...</p>\n        </div>\n      </ha-card>`;\n    }\n\n    const debugBanner = this.debug ? html`<p class=\"debug-banner\">🛠️ Debug mode active</p>` : '';\n    const debugOut: string[] = [];\n\n    const { states } = this.hass;\n    // Ensure states is always an array for downstream logic\n    const statesArray = Array.isArray(states) ? states : Object.values(states || {});\n    \n    // If no areas are configured, use all areas from Home Assistant\n    let areas = this.config.areas || [];\n    if (areas.length === 0 && this.hass.areas) {\n      areas = Object.entries(this.hass.areas).map(([id, area]: [string, any]) => ({ \n        area_id: id, \n        name: area.name || id,\n        enabled: true \n      }));\n    }\n    \n    // Filter enabled areas\n    areas = areas.filter(a => a.enabled !== false);\n    \n    // If no areas are enabled, show a message\n    if (areas.length === 0) {\n      return html`<ha-card>\n        <div class=\"card-content\">\n          <h2>👻 Hausgeist</h2>\n          <p>No areas enabled. Please enable at least one area in the card configuration.</p>\n        </div>\n      </ha-card>`;\n    }\n\n    const areaIds: string[] = areas.map(a => a.area_id);\n    const prioOrder = { alert: 3, warn: 2, info: 1, ok: 0 };\n    const defaultTarget = this.config?.overrides?.default_target || 21;\n    const weatherEntity = this.config.weather_entity || 'weather.home';\n\n\n    if (this.debug) {\n      debugOut.push(`DEBUG: Enabled areas: ${JSON.stringify(areas.map(a => a.name || a.area_id))}`);\n      debugOut.push(`DEBUG: Weather entity: ${weatherEntity}`);\n    }\n\n\n    const lang = this.hass.selectedLanguage || 'de';\n    const langKey = lang as keyof typeof TRANSLATIONS;\n    this.texts = TRANSLATIONS[langKey] || TRANSLATIONS['de'];\n    if (!this.texts || Object.keys(this.texts).length === 0) {\n      this.texts = TRANSLATIONS['de'];\n    }\n\n    // Mapping areaId -> Klartextname (aus config.areas)\n    const areaIdToName: Record<string, string> = {};\n    areas.forEach(a => { areaIdToName[a.area_id] = a.name; });\n\n    const areaMessages: {\n      area: string;\n      evals: any[];\n      usedSensors: { type: string; entity_id: string; value: any }[];\n    }[] = areaIds.map((area) => {\n      const sensors = filterSensorsByArea(statesArray, area);\n      const usedSensors: { type: string; entity_id: string; value: any }[] = [];\n      \n      if (this.debug) {\n        debugOut.push(`Processing area: ${area}`);\n        debugOut.push(`Available sensors: ${sensors.map((s) => s.entity_id).join(', ')}`);\n        debugOut.push(`Configured overrides: ${JSON.stringify(this.config?.overrides?.[area])}`);\n        debugOut.push(`Auto-detected sensors: ${JSON.stringify(this.config?.auto?.[area])}`);\n      }\n\n      // Use imported SENSOR_KEYWORDS from sensor-keywords.ts\n      const findSensor = (cls: keyof typeof SENSOR_KEYWORDS) => {\n        return this._findSensor(statesArray, area, usedSensors, cls);\n      };\n      // Ensure all required sensor types are checked for sensor presence (for usedSensors and warning logic)\n      const requiredSensorTypes: (keyof typeof SENSOR_KEYWORDS)[] = [\n        'temperature', 'humidity', 'co2', 'window', 'door', 'curtain', 'blind', 'heating', 'energy', 'motion', 'occupancy', 'air_quality', 'rain', 'sun', 'adjacent', 'forecast'\n      ];\n      // Call findSensor for all required types to populate usedSensors, even if not used in context\n      requiredSensorTypes.forEach(type => { findSensor(type); });\n      const get = (cls: keyof typeof SENSOR_KEYWORDS) => {\n        const s = findSensor(cls);\n        return s ? Number(s.state) : undefined;\n      };\n      // Helper to always cast to 'any' for state lookups\n      const findState = (fn: (e: any) => boolean) => {\n        const found = statesArray.find(fn);\n        return found ? (found as any) : undefined;\n      };\n      // Get target temperature, default to config override or 21°C\n      // Wetterdaten holen\n      // Nutze die weather_entity aus der aktuellen config (Editor-Auswahl), fallback auf Standard\n      const weatherEntityId = this.config.weather_entity || weatherEntity || 'weather.home';\n      const weather = findState((e: any) => e.entity_id === weatherEntityId);\n      const weatherAttributes = weather?.attributes || {};\n      const forecast = weatherAttributes.forecast?.[0] || {};\n\n      const context: Record<string, any> = {\n        target: Number(findState((e: any) => e.entity_id.endsWith('_temperature_target') && e.attributes.area_id === area)?.state ?? defaultTarget),\n        temp: get('temperature'),\n        humidity: get('humidity'),\n        co2: get('co2'),\n        window: findState((e: any) => e.entity_id.includes('window') && e.attributes.area_id === area)?.state,\n        heating: findState((e: any) => e.entity_id.includes('heating') && e.attributes.area_id === area)?.state,\n        outside_temp: Number(weatherAttributes.temperature ?? this.config.default_outside_temp ?? 15),\n        occupied: findState((e: any) => e.entity_id.includes('occupancy') && e.attributes.area_id === area)?.state === 'on',\n        forecast_temp: Number(forecast.temperature ?? 15),\n        energy: Number(findState((e: any) => e.entity_id.includes('energy') && e.attributes.area_id === area)?.state ?? 0),\n        high_threshold: this.highThreshold,\n        temp_change_rate: this._calculateTempChangeRate(area, states),\n        now: Date.now(),\n        curtain: findState((e: any) => e.entity_id.includes('curtain') && e.attributes.area_id === area)?.state,\n        blind: findState((e: any) => e.entity_id.includes('blind') && e.attributes.area_id === area)?.state,\n        adjacent_room_temp: Number((findState((e: any) => e.entity_id.includes('adjacent') && e.entity_id.includes('temperature') && e.attributes.area_id === area)?.state ?? this.config.default_adjacent_room_temp) || 0),\n        rain_soon: typeof forecast.precipitation === 'number' && forecast.precipitation > 0,\n        air_quality: (() => {\n          const airQualityState = findState((e: any) => e.entity_id.includes('air_quality') && e.attributes.area_id === area)?.state;\n          return airQualityState !== undefined ? airQualityState : 'unknown';\n        })(),\n        forecast_sun: forecast.condition === 'sunny',\n        debug: this.debug,\n        motion: findState((e: any) => e.entity_id.includes('motion') && e.attributes.area_id === area)?.state === 'on',\n        door: findState((e: any) => e.entity_id.includes('door') && e.attributes.area_id === area)?.state,\n      };\n\n      const evals = this.engine ? this.engine.evaluate(context) : [];\n      if (this.debug) {\n        debugOut.push(\n          `--- ${area} ---\\n` +\n          'Sensors used:\\n' +\n          usedSensors.map((s) => `  [${s.type}] ${s.entity_id}: ${s.value}`).join('\\n') +\n          `\\nRules checked: ${this.engine ? this.engine['rules'].length : 0}\\n` +\n          `Rules matched: ${evals.length}\\n` +\n          evals.map((ev: any) => `${ev.priority}: ${ev.message_key}`).join(\"\\n\")\n        );\n      }\n      return { area: areaIdToName[area] || area, evals, usedSensors };\n    });\n\n    // Only show areas with rule matches\n    const topMessages = areaMessages\n      .filter((a) => a.evals.length > 0)\n      .map((a) => {\n        // Pick highest priority message for each area\n        const top = a.evals.sort((a: any, b: any) => \n          (prioOrder[b.priority as keyof typeof prioOrder] || 0) - (prioOrder[a.priority as keyof typeof prioOrder] || 0)\n        )[0];\n        if (!top || !top.message_key) {\n          return undefined; // Skip if no valid message\n        }\n        if (this.debug) {\n          debugOut.push(`Top message for ${a.area}: ${top.priority} - ${top.message_key}`);\n        }\n        return { area: a.area, ...top, usedSensors: a.usedSensors };\n      })\n      .filter((e): e is { area: string; message_key: string; priority: string; usedSensors: any[] } => !!e);\n\n    const anySensorsUsed = areaMessages.some((areaMsg) => \n      areaMsg.usedSensors?.some((s) => s.entity_id !== '[NOT FOUND]')\n    );\n    const anyRulesApplied = areaMessages.some((a) => a.evals.length > 0);\n\n    // Finde den aktuellen Tipp (höchste Priorität)\n    let currentTip = '';\n    let currentPriority = 'ok';\n    if (this.ghostLoadError) {\n      currentTip = 'Geist-Modell nicht gefunden! Bitte ghost_model_url prüfen.';\n      currentPriority = 'alert';\n    } else if (topMessages.length > 0) {\n      currentTip = this.texts?.[topMessages[0].message_key] || topMessages[0].message_key;\n      currentPriority = topMessages[0].priority || 'ok';\n    }\n    this.lastTip = currentTip;\n    this._currentPriority = currentPriority;\n    if (this.ghost3D) {\n      this.ghost3D.setPriority(currentPriority as GhostPriority);\n      this.ghost3D.setTip(currentTip);\n    }\n    return html`\n      <style>\n        .ghost-3d-container {\n          width: 200px;\n          height: 200px;\n          margin: 0 auto;\n          position: relative;\n          z-index: 2;\n        }\n      </style>\n      <div class=\"ghost-3d-container\">\n        <!-- Three.js Canvas wird dynamisch eingefügt -->\n      </div>\n      ${debugBanner}\n      <ha-card>\n        <div class=\"card-content\">\n          <h2>👻 Hausgeist sagt:</h2>\n          ${!anySensorsUsed \n            ? html`<p class=\"warning\">⚠️ Keine Sensoren in den aktivierten Bereichen gefunden!<br>Bitte überprüfen Sie die Sensor-Konfiguration oder weisen Sie den Sensoren die entsprechenden Bereiche zu.</p>` \n            : !anyRulesApplied \n              ? html`<p class=\"info\">ℹ️ Alle Bereiche in Ordnung - keine Handlungsempfehlungen.</p>` \n              : html`\n                ${topMessages.map(e => html`\n                  <p class=\"${e.priority}\">\n                    <b>${e.area}:</b> ${this.texts?.[e.message_key] || `Fehlende Übersetzung: ${e.message_key}`}\n                  </p>\n                `)}\n              `\n          }\n          ${this.debug ? html`\n            <div class=\"debug\">${debugOut.join('\\n\\n')}</div>\n            <div class=\"sensors-used\">\n              <b>Verwendete Sensoren:</b>\n              <ul>\n                ${areaMessages.map(areaMsg => html`\n                  <li><b>${areaMsg.area}:</b>\n                    <ul>\n                      ${areaMsg.usedSensors.map(s => html`<li>[${s.type}] ${s.entity_id}: ${s.value}</li>`)}\n                    </ul>\n                  </li>\n                `)}\n              </ul>\n            </div>\n          ` : ''}\n        </div>\n      </ha-card>\n    `;\n  }\n\n  // Build evaluation context for rules with weather data and sensor values\n  private _buildContext(\n    area: string, \n    usedSensors: Array<{ type: string; entity_id: string; value: any }>, \n    states: any[],\n    weatherEntity: string,\n    defaultTarget: number\n  ): Record<string, any> {\n    // Use the passed-in states array everywhere\n    const findSensor = (type: string) => {\n      return this._findSensor(states, area, usedSensors, type);\n    };\n\n    const get = (type: string) => {\n      const s = findSensor(type);\n      return s ? Number(s.state) : undefined;\n    };\n\n    const findState = (fn: (e: any) => boolean) => {\n      const found = states.find(fn);\n      return found ? found : undefined;\n    };\n\n    // Get weather data\n    const weather = findState((e: any) => e.entity_id === weatherEntity);\n    const weatherAttributes = weather?.attributes || {};\n    const forecast = weatherAttributes.forecast?.[0] || {};\n\n    const target = this._getTargetTemperature(area, states, defaultTarget);\n\n    return {\n      debug: this.debug,\n      target,\n      temp: get('temperature'),\n      heating_level: get('heating_level'),\n      humidity: get('humidity'),\n      co2: get('co2'),\n      window: findState((e: any) => e.entity_id.includes('window') && e.attributes.area_id === area)?.state,\n      heating: findState((e: any) => e.entity_id.includes('heating') && e.attributes.area_id === area)?.state,\n      motion: findState((e: any) => e.entity_id.includes('motion') && e.attributes.area_id === area)?.state === 'on',\n      occupied: findState((e: any) => e.entity_id.includes('occupancy') && e.attributes.area_id === area)?.state === 'on',\n      energy: Number(findState((e: any) => e.entity_id.includes('energy') && e.attributes.area_id === area)?.state ?? 0),\n      high_threshold: this.highThreshold,\n      temp_change_rate: 0,\n      now: Date.now(),\n      curtain: findState((e: any) => e.entity_id.includes('curtain') && e.attributes.area_id === area)?.state,\n      blind: findState((e: any) => e.entity_id.includes('blind') && e.attributes.area_id === area)?.state,\n\n      // Weather data directly from weather entity\n      outside_temp: Number(weatherAttributes.temperature ?? 15),\n      forecast_temp: Number(forecast.temperature ?? 15),\n      rain_soon: (forecast.precipitation ?? 0) > 0,\n      forecast_sun: forecast.condition === 'sunny',\n      \n      // Additional sensor data\n      adjacent_room_temp: Number(findState((e: any) => e.entity_id.includes('adjacent') && e.entity_id.includes('temperature') && e.attributes.area_id === area)?.state ?? 0),\n      air_quality: findState((e: any) => e.entity_id.includes('air_quality') && e.attributes.area_id === area)?.state ?? 'unknown',\n    };\n  }\n\n  private _calculateTempChangeRate(area: string, states: any[]): number {\n    try {\n      const tempSensor = states.find(s => \n        s.attributes?.area_id === area && s.entity_id.includes('temperature')\n      );\n      if (tempSensor) {\n        const history = Array.isArray(tempSensor.attributes?.history) ? tempSensor.attributes.history : [];\n        if (history.length >= 2) {\n          const [latest, previous] = history.slice(-2);\n          const timeDiff = (latest.timestamp - previous.timestamp) / 3600000; // Convert ms to hours\n          if (timeDiff > 0) {\n            return (latest.value - previous.value) / timeDiff;\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error calculating temperature change rate:', error);\n    }\n    return 0; // Default to 0 if calculation fails\n  }\n\n  private _getTargetTemperature(area: string, states: any[], defaultTarget: number): number {\n    try {\n      // 1. Prüfe auf Override in den Einstellungen\n      const override = this.config?.overrides?.[area]?.target;\n      if (override) {\n        const overrideSensor = states.find(s => s.entity_id === override);\n        if (overrideSensor) {\n          const value = Number(overrideSensor.state);\n          if (!isNaN(value)) {\n            return value;\n          }\n        }\n      }\n\n      // 2. Suche nach einem Zieltemperatur-Sensor im Raum\n      const targetSensor = states.find(s => \n        s.attributes?.area_id === area && (\n          // Prüfe auf climate.* Entities\n          (s.entity_id.startsWith('climate.') && s.attributes?.temperature !== undefined) ||\n          // Prüfe auf dedizierte Zieltemperatur-Sensoren\n          s.entity_id.includes('target_temp') ||\n          s.entity_id.includes('temperature_target') ||\n          s.entity_id.includes('setpoint')\n        )\n      );\n\n      if (targetSensor) {\n        // Bei climate Entities nehmen wir temperature aus den Attributen\n        if (targetSensor.entity_id.startsWith('climate.')) {\n          return Number(targetSensor.attributes.temperature);\n        }\n        return Number(targetSensor.state);\n      }\n\n      // 3. Als letzten Ausweg den Standardwert verwenden\n      return defaultTarget;\n    } catch (error) {\n      console.error('Error getting target temperature:', error);\n    }\n    return defaultTarget; // Default to config value on error\n  }\n\n  // Find sensor by type in area, with overrides and auto-detection\n  private _findSensor(\n    sensors: Array<{ entity_id: string; state: any; attributes: { [key: string]: any } }>,\n    area: string,\n    usedSensors: Array<{ type: string; entity_id: string; value: any }>,\n    sensorType: string\n  ) {\n    if (this.debug) {\n      console.log(`[_findSensor] Looking for ${sensorType} in area ${area}`);\n      console.log(`[_findSensor] config.overrides[${area}]:`, this.config?.overrides?.[area]);\n      // console.log(`[_findSensor] config.auto[${area}]:`, this.config?.auto?.[area]);\n    }\n\n    // 1. Check for manual override in config\n    const overrideId = this.config?.overrides?.[area]?.[sensorType];\n    if (overrideId) {\n      const sensor = sensors.find((s) => s.entity_id === overrideId);\n      if (sensor) {\n        usedSensors.push({\n          type: `${sensorType} (override)`,\n          entity_id: sensor.entity_id,\n          value: sensor.state\n        });\n        return sensor;\n      }\n      if (this.debug) console.log(`[_findSensor] Override sensor ${overrideId} not found`);\n    }\n\n    // 2. Check auto-detected sensor from config (auskommentiert)\n    // const autoId = this.config?.auto?.[area]?.[sensorType];\n    // if (autoId) {\n    //   const sensor = sensors.find((s) => s.entity_id === autoId);\n    //   if (sensor) {\n    //     usedSensors.push({\n    //       type: `${sensorType} (auto)`,\n    //       entity_id: sensor.entity_id,\n    //       value: sensor.state\n    //     });\n    //     return sensor;\n    //   }\n    //   if (this.debug) console.log(`[_findSensor] Auto sensor ${autoId} not found`);\n    // }\n\n    // 3. Not found\n    if (this.debug) {\n      usedSensors.push({\n        type: sensorType,\n        entity_id: '[NOT FOUND]',\n        value: 'No matching sensor found'\n      });\n    }\n    return undefined;\n  }\n}\n\n// Die Klasse ist jetzt komplett frei von jeglicher Darstellungs-/Farb-/Three.js-Logik für den Geist.\n// Die gesamte Visualisierung und Farblogik ist in Ghost3D ausgelagert."]}