{"version":3,"file":"hausgeist-card.js","sourceRoot":"","sources":["../../src/hausgeist-card.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAkC,MAAM,KAAK,CAAC;AACvE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,MAAM,yBAAyB,CAAC;AACzC,OAAO,EAAE,MAAM,yBAAyB,CAAC;AACzC,OAAO,yBAAyB,CAAC;AACjC,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAClC,OAAO,EAAE,OAAO,EAAiB,MAAM,YAAY,CAAC;AAIpD,MAAM,YAAY,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAIzB,IAAM,aAAa,GAAnB,MAAM,aAAc,SAAQ,UAAU;IAAtC;;QAE8B,WAAM,GAcrC,EAAE,CAAC;QAC6B,UAAK,GAAG,KAAK,CAAC;QACd,WAAM,GAAG,KAAK,CAAC;QAChB,kBAAa,GAAG,IAAI,CAAC;QACrB,cAAS,GAAG,EAAE,CAAC;QAK1C,UAAK,GAA2B,YAAY,CAAC,IAAI,CAAC,CAAC;QACnD,UAAK,GAAG,KAAK,CAAC;QAEd,YAAO,GAAW,EAAE,CAAC;QACrB,mBAAc,GAAY,KAAK,CAAC;QAChC,qBAAgB,GAAW,IAAI,CAAC;QAChC,sBAAiB,GAAW,CAAC,CAAC;QAC9B,2BAAsB,GAAW,CAAC,CAAC;QACnC,sBAAiB,GAAW,IAAI,CAAC,CAAC,6CAA6C;QAC/E,iBAAY,GAAmH,EAAE,CAAC;QAClI,mBAAc,GAAQ,IAAI,CAAC;QAC3B,qBAAgB,GAA2C,EAAE,CAAC;QAC9D,kBAAa,GAA2B,EAAE,CAAC;QAC3C,yBAAoB,GAAW,KAAK,CAAC,CAAC,MAAM;IAqdtD,CAAC;IAndC,iDAAiD;IACjD,SAAS,CAAC,MAAW;QACnB,0BAA0B;QAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,6BAA6B;QAC7B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC;QAEnC,0CAA0C;QAC1C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,KAAK,CAAC;QAErC,iCAAiC;QACjC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC;QAElD,6BAA6B;QAC7B,IAAI,MAAM,CAAC,SAAS,EAAE,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QACpC,CAAC;IACH,CAAC;IAED,wBAAwB;IACjB,MAAM,CAAC,KAAK,CAAC,gBAAgB;QAClC,OAAO,QAAQ,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACzD,CAAC;IAED,gCAAgC;IACzB,MAAM,CAAC,aAAa;QACzB,OAAO;YACL,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,KAAK;YACb,aAAa,EAAE,IAAI;YACnB,cAAc,EAAE,EAAE;YAClB,0BAA0B,EAAE,CAAC;YAC7B,oBAAoB,EAAE,EAAE;SACzB,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,iBAAiB;QACrB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAE1B,IAAI,CAAC;YACH,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;YAC5D,CAAC;YAED,IAAI,KAAK,CAAC;YACV,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;oBACf,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;gBACtD,CAAC;gBACD,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACrC,CAAC;iBAAM,CAAC;gBACN,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;oBACf,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;gBAC9D,CAAC;gBACD,KAAK,GAAG,MAAM,SAAS,EAAE,CAAC;YAC5B,CAAC;YAED,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;gBACpC,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;gBAC1D,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,OAAO;YACT,CAAC;YAED,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;YAClD,CAAC;YAED,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC;YACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAElB,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,GAAG,CAAC,wDAAwD,CAAC,CAAC;YACxE,CAAC;YAED,IAAI,CAAC,aAAa,EAAE,CAAC;YAErB,8BAA8B;YAC9B,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;gBACxB,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACrC,CAAC;YACD,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC1F,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,qBAAqB;QACjD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,sCAAsC,EAAE,KAAK,CAAC,CAAC;YAC7D,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;IACH,CAAC;IAED,OAAO,CAAC,YAA4B;QAClC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAC5B,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,EAAE,aAAa,CAAC,qBAAqB,CAAgB,CAAC;QACvF,IAAI,SAAS,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC;gBACzB,SAAS;gBACT,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,IAAI,kBAAkB;gBAC3D,MAAM,EAAE,GAAG,EAAE;oBACX,IAAI,CAAC,OAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAiC,CAAC,CAAC;oBAClE,IAAI,CAAC,OAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACrC,CAAC;gBACD,UAAU,EAAE,IAAI;gBAChB,YAAY,EAAE,IAAI;gBAClB,mBAAmB,EAAE,GAAG;aACzB,CAAC,CAAC;QACL,CAAC;QACD,IAAI,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YAC9B,MAAM,KAAK,GAAG,SAAS,CAAC,WAAW,IAAI,GAAG,CAAC;YAC3C,MAAM,MAAM,GAAG,SAAS,CAAC,YAAY,IAAI,GAAG,CAAC;YAC7C,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YACnC,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;YACrC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC;QACzC,CAAC;IACH,CAAC;IAED,oBAAoB;QAClB,KAAK,CAAC,oBAAoB,EAAE,CAAC;QAC7B,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QAC3B,CAAC;QACD,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACnC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC;IACH,CAAC;IAEO,cAAc;QACpB,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,OAAO,4DAA4D,CAAC;QACtE,CAAC;QACD,OAAO,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;IAC5B,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACjB,OAAO,IAAI,CAAA;;;;iBAIA,CAAC;QACd,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAA;;;;iBAIA,CAAC;QACd,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAChC,OAAO,IAAI,CAAA;;;;iBAIA,CAAC;QACd,CAAC;QAED,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAA,mDAAmD,CAAC,CAAC,CAAC,EAAE,CAAC;QAC9F,MAAM,QAAQ,GAAa,EAAE,CAAC;QAE9B,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7B,wDAAwD;QACxD,MAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC;QAEjF,gEAAgE;QAChE,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;QACpC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC1C,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAgB,EAAE,EAAE,CAAC,CAAC;gBAC1E,OAAO,EAAE,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE;gBACrB,OAAO,EAAE,IAAI;aACd,CAAC,CAAC,CAAC;QACN,CAAC;QAED,uBAAuB;QACvB,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC;QAE/C,0CAA0C;QAC1C,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACvB,OAAO,IAAI,CAAA;;;;;iBAKA,CAAC;QACd,CAAC;QAED,MAAM,OAAO,GAAa,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACpD,MAAM,SAAS,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QACxD,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,cAAc,IAAI,EAAE,CAAC;QACnE,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,cAAc,CAAC;QAEnE,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,QAAQ,CAAC,IAAI,CAAC,yBAAyB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;YAC9F,QAAQ,CAAC,IAAI,CAAC,0BAA0B,aAAa,EAAE,CAAC,CAAC;QAC3D,CAAC;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC;QAChD,MAAM,OAAO,GAAG,IAAiC,CAAC;QAClD,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACxD,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC;QAED,oDAAoD;QACpD,MAAM,YAAY,GAA2B,EAAE,CAAC;QAChD,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAE1D,0FAA0F;QAC1F,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,sBAAsB,IAAI,GAAG,GAAG,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC/F,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;YACvE,IAAI,CAAC,sBAAsB,GAAG,GAAG,CAAC;QACpC,CAAC;QACD,MAAM,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAErD,sDAAsD;QACtD,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,EAAE,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;QAChG,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAE/D,OAAO,IAAI,CAAA;;;;YAIH,WAAW;YACX,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAC/F,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAA,sBAAsB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;;;KAGvF,CAAC;IACJ,CAAC;IAEO,iBAAiB,CAAC,IAAY,EAAE,MAA0D;QAChG,OAAO,IAAI,CAAA;;cAED,MAAM,CAAC,IAAI;;YAEb,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAA,OAAO,UAAU,OAAO,CAAC;;UAE9D,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAA;;;;gBAIX,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAA,OAAO,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,SAAS,MAAM,CAAC,CAAC,KAAK,OAAO,CAAC;;;SAGzF,CAAC,CAAC,CAAC,EAAE;;KAET,CAAC;IACJ,CAAC;IAEO,WAAW,CAAC,MAAa,EAAE,IAAY,EAAE,WAAmE,EAAE,UAAkB;QACtI,MAAM,SAAS,GAAG,CAAC,EAAuB,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC/D,IAAI,MAAM,CAAC;QAEX,8BAA8B;QAC9B,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QAC9D,IAAI,QAAQ,EAAE,CAAC;YACb,MAAM,GAAG,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,QAAQ,CAAC,CAAC;YACzD,IAAI,MAAM,EAAE,CAAC;gBACX,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;gBACzF,OAAO,MAAM,CAAC;YAChB,CAAC;QACH,CAAC;QAED,uBAAuB;QACvB,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QAC7D,IAAI,YAAY,EAAE,CAAC;YACjB,MAAM,GAAG,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,YAAY,CAAC,CAAC;YAC7D,IAAI,MAAM,EAAE,CAAC;gBACX,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;gBACzF,OAAO,MAAM,CAAC;YAChB,CAAC;QACH,CAAC;QAED,sBAAsB;QACtB,MAAM,GAAG,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAC5B,CAAC,CAAC,UAAU,EAAE,OAAO,KAAK,IAAI;YAC9B,CAAC,CAAC,CAAC,UAAU,EAAE,YAAY,KAAK,UAAU;gBACzC,CAAC,UAAU,KAAK,WAAW,IAAI,CAAC,CAAC,UAAU,EAAE,YAAY,KAAK,QAAQ,CAAC;gBACvE,CAAC,UAAU,KAAK,SAAS,IAAI,CAAC,CAAC,UAAU,EAAE,YAAY,KAAK,SAAS,CAAC,CAAC,CACzE,CAAC;QACF,IAAI,MAAM,EAAE,CAAC;YACX,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;YACzF,OAAO,MAAM,CAAC;QAChB,CAAC;QAED,kBAAkB;QAClB,MAAM,QAAQ,GAAG,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7D,MAAM,GAAG,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAC5B,CAAC,CAAC,UAAU,EAAE,OAAO,KAAK,IAAI;YAC9B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAChB,CAAC,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;gBACnD,CAAC,CAAC,CAAC,UAAU,EAAE,aAAa,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAC5E,CACF,CAAC;QACF,IAAI,MAAM,EAAE,CAAC;YACX,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;YACzF,OAAO,MAAM,CAAC;QAChB,CAAC;QAED,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,GAAG,CAAC,yCAAyC,UAAU,cAAc,IAAI,GAAG,CAAC,CAAC;QACxF,CAAC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAEO,qBAAqB,CAAC,IAAY,EAAE,MAAa,EAAE,aAAqB;QAC9E,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,EAAE,CACpC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC;YAC3C,CAAC,CAAC,UAAU,EAAE,OAAO,KAAK,IAAI,CAC/B,CAAC;QACF,OAAO,MAAM,CAAC,MAAM,EAAE,KAAK,IAAI,aAAa,CAAC,CAAC;IAChD,CAAC;IAEO,aAAa,CACnB,IAAY,EACZ,WAAmE,EACnE,MAAa,EACb,aAAqB,EACrB,aAAqB;QAErB,MAAM,UAAU,GAAG,CAAC,IAAkC,EAAE,EAAE;YACxD,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;QAC3D,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,CAAC,IAAkC,EAAsB,EAAE;YACrE,MAAM,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;YAC3B,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACzC,CAAC,CAAC;QAEF,MAAM,SAAS,GAAG,CAAC,EAAuB,EAAE,EAAE;YAC5C,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC9B,OAAO,KAAK,IAAI,SAAS,CAAC;QAC5B,CAAC,CAAC;QAEF,MAAM,OAAO,GAAG,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,aAAa,CAAC,CAAC;QACrE,MAAM,iBAAiB,GAAG,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC;QACpD,MAAM,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QACvD,MAAM,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;QAEvE,MAAM,QAAQ,GAAG;YACf,IAAI,EAAE,GAAG,CAAC,aAAa,CAAC;YACxB,QAAQ,EAAE,GAAG,CAAC,UAAU,CAAC;YACzB,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC;YACf,MAAM,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK;YACrG,OAAO,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK;YACvG,YAAY,EAAE,MAAM,CAAC,iBAAiB,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,IAAI,EAAE,CAAC;YAC7F,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK,KAAK,IAAI;YACnH,aAAa,EAAE,MAAM,CAAC,QAAQ,CAAC,WAAW,IAAI,EAAE,CAAC;YACjD,aAAa,EAAE,CAAC,GAAG,EAAE;gBACnB,IAAI,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,CAAC;oBAC9C,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;oBACzB,MAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;oBAClD,MAAM,cAAc,GAAG,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAClE,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,YAAY,IAAI,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,QAAQ,CACzE,CAAC;oBACF,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBAC9B,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC7F,CAAC;gBACH,CAAC;gBACD,OAAO,SAAS,CAAC;YACnB,CAAC,CAAC,EAAE;YACJ,YAAY,EAAE,CAAC,GAAG,EAAE;gBAClB,IAAI,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,CAAC;oBAC9C,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;oBACzB,MAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;oBAClD,MAAM,cAAc,GAAG,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAClE,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,YAAY,IAAI,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,QAAQ,CACzE,CAAC;oBACF,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBAC9B,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC5F,CAAC;gBACH,CAAC;gBACD,OAAO,SAAS,CAAC;YACnB,CAAC,CAAC,EAAE;YACJ,YAAY,EAAE,QAAQ,CAAC,SAAS,KAAK,OAAO;YAC5C,MAAM;YACN,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,MAAM,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK,KAAK,IAAI;YAC9G,IAAI,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK;YACjG,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC;YAClH,cAAc,EAAE,IAAI,CAAC,aAAa;YAClC,gBAAgB,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,EAAE,MAAM,CAAC;YAC7D,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE;YACf,OAAO,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK;YACvG,KAAK,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK;YACnG,kBAAkB,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC;YACvK,WAAW,EAAE,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK,IAAI,SAAS;SACpH,CAAC;QAEX,qCAAqC;QACrC,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACpD,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/C,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC3B,MAAM,kBAAkB,GAAG,OAAO,GAAG,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAC1E,MAAM,OAAO,GAAG,CAAC,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAA0B,CAAC,CAAC,CAAC;QAErH,IAAI,CAAC,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC;YACpC,OAAO,EAAE,CAAC;QACZ,CAAC;QAED,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;QACvC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;QAEnC,OAAO;YACL,GAAG,QAAQ;YACX,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK,IAAI,aAAa,CAAC;YAC3I,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;IACJ,CAAC;IAEO,wBAAwB,CAAC,IAAY,EAAE,MAAa;QAC1D,IAAI,CAAC;YACH,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CACjC,CAAC,CAAC,UAAU,EAAE,OAAO,KAAK,IAAI,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,CACtE,CAAC;YACF,IAAI,UAAU,EAAE,CAAC;gBACf,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;gBACnG,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC;oBACxB,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7C,MAAM,QAAQ,GAAG,CAAC,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,CAAC,sBAAsB;oBAC1F,IAAI,QAAQ,GAAG,CAAC,EAAE,CAAC;wBACjB,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;oBACpD,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,4CAA4C,EAAE,KAAK,CAAC,CAAC;QACrE,CAAC;QACD,OAAO,CAAC,CAAC;IACX,CAAC;IAEO,iBAAiB;QACvB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK;YAAE,OAAO;QAEtD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC;QACjE,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO;QAE/B,sBAAsB;QACtB,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;QACrE,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAE3C,iBAAiB;QACjB,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEpG,oCAAoC;QACpC,MAAM,WAAW,GAA2D,EAAE,CAAC;QAC/E,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAChC,IAAI,CAAC,OAAO,EACZ,WAAW,EACX,MAAM,EACN,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,cAAc,EAC5C,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,EAAE,CACjC,CAAC;QAEF,IAAI,IAAI,CAAC,MAAM,IAAI,OAAO,EAAE,CAAC;YAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAC5C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG;gBAChC,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO;gBAC/B,KAAK;gBACL,WAAW;aACZ,CAAC;YACF,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;IACH,CAAC;;AApeM,oBAAM,GAAG,MAAM,AAAT,CAAU;AArBY;IAAlC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;2CAAkB;AACV;IAAlC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;6CAcpB;AAC6B;IAAnC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;4CAAsB;AACd;IAAnC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;6CAAuB;AAChB;IAAlC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;oDAA6B;AACrB;IAAlC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;gDAAuB;AApBvC,aAAa;IADzB,aAAa,CAAC,gBAAgB,CAAC;GACnB,aAAa,CA2fzB;;AAED,qGAAqG;AACrG,uEAAuE","sourcesContent":["import { LitElement, html, PropertyValues, TemplateResult } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { RuleEngine } from './rule-engine';\nimport { filterSensorsByArea } from './utils';\nimport { loadRules } from './plugin-loader';\nimport { SENSOR_KEYWORDS } from './sensor-keywords';\nimport en from '../translations/en.json';\nimport de from '../translations/de.json';\nimport './hausgeist-card-editor';\nimport { styles } from './styles';\nimport { Ghost3D, GhostPriority } from './ghost-3d';\n\ndeclare module 'three/examples/jsm/loaders/GLTFLoader.js';\n\nconst TRANSLATIONS = { de, en };\n\n\n@customElement('hausgeist-card')\nexport class HausgeistCard extends LitElement {\n  @property({ type: Object }) public hass: any;\n  @property({ type: Object }) public config: { \n    area_id?: string; \n    overrides?: any; \n    auto?: any; \n    debug?: boolean; \n    notify?: boolean; \n    highThreshold?: number; \n    rulesJson?: string; \n    areas?: Array<{ area_id: string; name: string; enabled?: boolean }>;\n    weather_entity?: string;\n    default_target?: number;\n    default_adjacent_room_temp?: number;\n    default_outside_temp?: number;\n    ghost_model_url?: string;\n  } = {};\n  @property({ type: Boolean }) public debug = false;\n  @property({ type: Boolean }) public notify = false;\n  @property({ type: Number }) public highThreshold = 2000;\n  @property({ type: String }) public rulesJson = '';\n\n  static styles = styles;\n\n  private engine?: RuleEngine;\n  private texts: Record<string, string> = TRANSLATIONS['de'];\n  private ready = false;\n  private ghost3D?: Ghost3D;\n  private lastTip: string = '';\n  private ghostLoadError: boolean = false;\n  private _currentPriority: string = 'ok';\n  private _currentAreaIndex: number = 0;\n  private _lastAreaEvalTimestamp: number = 0;\n  private _areaEvalInterval: number = 2000; // ms, wie oft ein Bereich neu evaluiert wird\n  private _areaResults: Record<string, { area: string; evals: any[]; usedSensors: { type: string; entity_id: string; value: any }[] }> = {};\n  private _areaEvalTimer: any = null;\n  private _areaSensorCache: Record<string, { [key: string]: any }> = {};\n  private _areaLastEval: Record<string, number> = {};\n  private _areaMaxEvalInterval: number = 60000; // 60s\n\n  // Add required setConfig method for custom cards\n  setConfig(config: any) {\n    // Store the configuration\n    this.config = config;\n    \n    // Set debug flag from config\n    this.debug = config.debug ?? false;\n    \n    // Set notification preference from config\n    this.notify = config.notify ?? false;\n    \n    // Set high threshold from config\n    this.highThreshold = config.highThreshold ?? 2000;\n    \n    // Set rules JSON if provided\n    if (config.rulesJson) {\n      this.rulesJson = config.rulesJson;\n    }\n  }\n\n  // Support the editor UI\n  public static async getConfigElement() {\n    return document.createElement('hausgeist-card-editor');\n  }\n\n  // Provide default configuration\n  public static getStubConfig() {\n    return {\n      debug: false,\n      notify: false,\n      highThreshold: 2000,\n      default_target: 21,\n      default_adjacent_room_temp: 0,\n      default_outside_temp: 15\n    };\n  }\n\n  async connectedCallback() {\n    super.connectedCallback();\n    \n    try {\n      if (this.debug) {\n        console.log('[Hausgeist] Connected callback starting...');\n      }\n\n      let rules;\n      if (this.rulesJson) {\n        if (this.debug) {\n          console.log('[Hausgeist] Using provided rulesJson');\n        }\n        rules = JSON.parse(this.rulesJson);\n      } else {\n        if (this.debug) {\n          console.log('[Hausgeist] Loading rules from plugin-loader');\n        }\n        rules = await loadRules();\n      }\n      \n      if (!rules || !Array.isArray(rules)) {\n        console.error('[Hausgeist] Invalid rules format:', rules);\n        this.ready = false;\n        return;\n      }\n\n      if (this.debug) {\n        console.log('[Hausgeist] Loaded rules:', rules);\n      }\n\n      this.engine = new RuleEngine(rules);\n      this.ready = true;\n      \n      if (this.debug) {\n        console.log('[Hausgeist] Initialization complete, requesting update');\n      }\n      \n      this.requestUpdate();\n\n      // Start area evaluation timer\n      if (this._areaEvalTimer) {\n        clearInterval(this._areaEvalTimer);\n      }\n      this._areaEvalTimer = setInterval(() => this._evaluateNextArea(), this._areaEvalInterval);\n      this._evaluateNextArea(); // Initial evaluation\n    } catch (error) {\n      console.error('[Hausgeist] Error initializing card:', error);\n      this.ready = false;\n    }\n  }\n\n  updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n    const container = this.renderRoot?.querySelector('.ghost-3d-container') as HTMLElement;\n    if (container && !this.ghost3D) {\n      this.ghost3D = new Ghost3D({\n        container,\n        modelUrl: this.config.ghost_model_url || '/local/ghost.glb',\n        onLoad: () => {\n          this.ghost3D!.setPriority(this._currentPriority as GhostPriority);\n          this.ghost3D!.setTip(this.lastTip);\n        },\n        modelScale: 1.05,\n        modelYOffset: 0.35,\n        speechBubbleYOffset: 1.1\n      });\n    }\n    if (container && this.ghost3D) {\n      const width = container.offsetWidth || 220;\n      const height = container.offsetHeight || 220;\n      this.ghost3D.resize(width, height);\n      container.style.width = width + 'px';\n      container.style.height = height + 'px';\n    }\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this.ghost3D) {\n      this.ghost3D.dispose();\n      this.ghost3D = undefined;\n    }\n    if (this._areaEvalTimer) {\n      clearInterval(this._areaEvalTimer);\n      this._areaEvalTimer = null;\n    }\n  }\n\n  private _getCurrentTip(): string {\n    if (this.ghostLoadError) {\n      return 'Geist-Modell nicht gefunden! Bitte ghost_model_url prüfen.';\n    }\n    return this.lastTip || '';\n  }\n\n  render() {\n    if (!this.config) {\n      return html`<ha-card>\n        <div class=\"card-content\">\n          <p>Invalid configuration</p>\n        </div>\n      </ha-card>`;\n    }\n\n    if (!this.hass) {\n      return html`<ha-card>\n        <div class=\"card-content\">\n          <p>Home Assistant not available</p>\n        </div>\n      </ha-card>`;\n    }\n\n    if (!this.engine || !this.ready) {\n      return html`<ha-card>\n        <div class=\"card-content\">\n          <p>Loading...</p>\n        </div>\n      </ha-card>`;\n    }\n\n    const debugBanner = this.debug ? html`<p class=\"debug-banner\">🛠️ Debug mode active</p>` : '';\n    const debugOut: string[] = [];\n\n    const { states } = this.hass;\n    // Ensure states is always an array for downstream logic\n    const statesArray = Array.isArray(states) ? states : Object.values(states || {});\n    \n    // If no areas are configured, use all areas from Home Assistant\n    let areas = this.config.areas || [];\n    if (areas.length === 0 && this.hass.areas) {\n      areas = Object.entries(this.hass.areas).map(([id, area]: [string, any]) => ({ \n        area_id: id, \n        name: area.name || id,\n        enabled: true \n      }));\n    }\n    \n    // Filter enabled areas\n    areas = areas.filter(a => a.enabled !== false);\n    \n    // If no areas are enabled, show a message\n    if (areas.length === 0) {\n      return html`<ha-card>\n        <div class=\"card-content\">\n          <h2>👻 Hausgeist</h2>\n          <p>No areas enabled. Please enable at least one area in the card configuration.</p>\n        </div>\n      </ha-card>`;\n    }\n\n    const areaIds: string[] = areas.map(a => a.area_id);\n    const prioOrder = { alert: 3, warn: 2, info: 1, ok: 0 };\n    const defaultTarget = this.config?.overrides?.default_target || 21;\n    const weatherEntity = this.config.weather_entity || 'weather.home';\n\n    if (this.debug) {\n      debugOut.push(`DEBUG: Enabled areas: ${JSON.stringify(areas.map(a => a.name || a.area_id))}`);\n      debugOut.push(`DEBUG: Weather entity: ${weatherEntity}`);\n    }\n\n    const lang = this.hass.selectedLanguage || 'de';\n    const langKey = lang as keyof typeof TRANSLATIONS;\n    this.texts = TRANSLATIONS[langKey] || TRANSLATIONS['de'];\n    if (!this.texts || Object.keys(this.texts).length === 0) {\n      this.texts = TRANSLATIONS['de'];\n    }\n\n    // Mapping areaId -> Klartextname (aus config.areas)\n    const areaIdToName: Record<string, string> = {};\n    areas.forEach(a => { areaIdToName[a.area_id] = a.name; });\n\n    // Bereichsrotation: Pro Render nur einen Bereich auswerten und Ergebnis zwischenspeichern\n    const now = Date.now();\n    if (!this._lastAreaEvalTimestamp || now - this._lastAreaEvalTimestamp > this._areaEvalInterval) {\n      this._currentAreaIndex = (this._currentAreaIndex + 1) % areaIds.length;\n      this._lastAreaEvalTimestamp = now;\n    }\n    const activeAreaId = areaIds[this._currentAreaIndex];\n\n    // Nur den aktiven Bereich neu auswerten und speichern\n    const context = this._buildContext(activeAreaId, [], statesArray, weatherEntity, defaultTarget);\n    const evals = this.engine ? this.engine.evaluate(context) : [];\n\n    return html`\n      <ha-card>\n        <div class=\"card-content\">\n          <h2>👻 Hausgeist</h2>\n          ${debugBanner}\n          ${Object.entries(this._areaResults).map(([area, result]) => this._renderAreaResult(area, result))}\n          ${debugOut.length > 0 ? html`<pre class=\"debug\">${debugOut.join('\\n')}</pre>` : ''}\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private _renderAreaResult(area: string, result: { area: string; evals: any[]; usedSensors: any[] }): TemplateResult {\n    return html`\n      <div class=\"area-result\">\n        <h3>${result.area}</h3>\n        <ul>\n          ${result.evals.map(evalResult => html`<li>${evalResult}</li>`)}\n        </ul>\n        ${this.debug ? html`\n          <details>\n            <summary>Sensors used</summary>\n            <ul>\n              ${result.usedSensors.map(s => html`<li>${s.type}: ${s.entity_id} = ${s.value}</li>`)}\n            </ul>\n          </details>\n        ` : ''}\n      </div>\n    `;\n  }\n\n  private _findSensor(states: any[], area: string, usedSensors: Array<{ type: string; entity_id: string; value: any }>, sensorType: string): any {\n    const findState = (fn: (e: any) => boolean) => states.find(fn);\n    let sensor;\n\n    // 1. Try override from config\n    const override = this.config?.overrides?.[area]?.[sensorType];\n    if (override) {\n      sensor = findState((e: any) => e.entity_id === override);\n      if (sensor) {\n        usedSensors.push({ type: sensorType, entity_id: sensor.entity_id, value: sensor.state });\n        return sensor;\n      }\n    }\n\n    // 2. Try auto-detected\n    const autoDetected = this.config?.auto?.[area]?.[sensorType];\n    if (autoDetected) {\n      sensor = findState((e: any) => e.entity_id === autoDetected);\n      if (sensor) {\n        usedSensors.push({ type: sensorType, entity_id: sensor.entity_id, value: sensor.state });\n        return sensor;\n      }\n    }\n\n    // 3. Try device_class\n    sensor = findState((e: any) => \n      e.attributes?.area_id === area && \n      (e.attributes?.device_class === sensorType ||\n       (sensorType === 'occupancy' && e.attributes?.device_class === 'motion') ||\n       (sensorType === 'heating' && e.attributes?.device_class === 'climate'))\n    );\n    if (sensor) {\n      usedSensors.push({ type: sensorType, entity_id: sensor.entity_id, value: sensor.state });\n      return sensor;\n    }\n\n    // 4. Try keywords\n    const keywords = SENSOR_KEYWORDS[sensorType] || [sensorType];\n    sensor = findState((e: any) => \n      e.attributes?.area_id === area && \n      keywords.some(k => \n        e.entity_id.toLowerCase().includes(k.toLowerCase()) || \n        (e.attributes?.friendly_name || '').toLowerCase().includes(k.toLowerCase())\n      )\n    );\n    if (sensor) {\n      usedSensors.push({ type: sensorType, entity_id: sensor.entity_id, value: sensor.state });\n      return sensor;\n    }\n\n    if (this.debug) {\n      console.log(`[Hausgeist] No sensor found for type '${sensorType}' in area '${area}'`);\n    }\n    return undefined;\n  }\n\n  private _getTargetTemperature(area: string, states: any[], defaultTarget: number): number {\n    const target = states.find((e: any) => \n      e.entity_id.endsWith('_temperature_target') && \n      e.attributes?.area_id === area\n    );\n    return Number(target?.state ?? defaultTarget);\n  }\n\n  private _buildContext(\n    area: string, \n    usedSensors: Array<{ type: string; entity_id: string; value: any }>, \n    states: any[],\n    weatherEntity: string,\n    defaultTarget: number\n  ): Record<string, any> {\n    const findSensor = (type: keyof typeof SENSOR_KEYWORDS) => {\n      return this._findSensor(states, area, usedSensors, type);\n    };\n\n    const get = (type: keyof typeof SENSOR_KEYWORDS): number | undefined => {\n      const s = findSensor(type);\n      return s ? Number(s.state) : undefined;\n    };\n\n    const findState = (fn: (e: any) => boolean) => {\n      const found = states.find(fn);\n      return found || undefined;\n    };\n\n    const weather = findState((e: any) => e.entity_id === weatherEntity);\n    const weatherAttributes = weather?.attributes || {};\n    const forecast = weatherAttributes.forecast?.[0] || {};\n    const target = this._getTargetTemperature(area, states, defaultTarget);\n\n    const cacheObj = {\n      temp: get('temperature'),\n      humidity: get('humidity'),\n      co2: get('co2'),\n      window: findState((e: any) => e.entity_id.includes('window') && e.attributes.area_id === area)?.state,\n      heating: findState((e: any) => e.entity_id.includes('heating') && e.attributes.area_id === area)?.state,\n      outside_temp: Number(weatherAttributes.temperature ?? this.config.default_outside_temp ?? 15),\n      occupied: findState((e: any) => e.entity_id.includes('occupancy') && e.attributes.area_id === area)?.state === 'on',\n      forecast_temp: Number(forecast.temperature ?? 15),\n      forecast_high: (() => {\n        if (Array.isArray(weatherAttributes.forecast)) {\n          const today = new Date();\n          const todayStr = today.toISOString().slice(0, 10);\n          const todayForecasts = weatherAttributes.forecast.filter((f: any) =>\n            (f.datetime || f.datetime_iso || f.time || '').slice(0, 10) === todayStr\n          );\n          if (todayForecasts.length > 0) {\n            return Math.max(...todayForecasts.map((f: any) => Number(f.temperature ?? f.temp ?? -99)));\n          }\n        }\n        return undefined;\n      })(),\n      forecast_low: (() => {\n        if (Array.isArray(weatherAttributes.forecast)) {\n          const today = new Date();\n          const todayStr = today.toISOString().slice(0, 10);\n          const todayForecasts = weatherAttributes.forecast.filter((f: any) =>\n            (f.datetime || f.datetime_iso || f.time || '').slice(0, 10) === todayStr\n          );\n          if (todayForecasts.length > 0) {\n            return Math.min(...todayForecasts.map((f: any) => Number(f.temperature ?? f.temp ?? 99)));\n          }\n        }\n        return undefined;\n      })(),\n      forecast_sun: forecast.condition === 'sunny',\n      target,\n      debug: this.debug,\n      motion: findState((e: any) => e.entity_id.includes('motion') && e.attributes.area_id === area)?.state === 'on',\n      door: findState((e: any) => e.entity_id.includes('door') && e.attributes.area_id === area)?.state,\n      energy: Number(findState((e: any) => e.entity_id.includes('energy') && e.attributes.area_id === area)?.state ?? 0),\n      high_threshold: this.highThreshold,\n      temp_change_rate: this._calculateTempChangeRate(area, states),\n      now: Date.now(),\n      curtain: findState((e: any) => e.entity_id.includes('curtain') && e.attributes.area_id === area)?.state,\n      blind: findState((e: any) => e.entity_id.includes('blind') && e.attributes.area_id === area)?.state,\n      adjacent_room_temp: Number(findState((e: any) => e.entity_id.includes('adjacent') && e.entity_id.includes('temperature') && e.attributes.area_id === area)?.state ?? 0),\n      air_quality: findState((e: any) => e.entity_id.includes('air_quality') && e.attributes.area_id === area)?.state ?? 'unknown'\n    } as const;\n\n    // Update cache and check for changes\n    const lastCache = this._areaSensorCache[area] || {};\n    const lastEval = this._areaLastEval[area] || 0;\n    const nowTime = Date.now();\n    const maxIntervalReached = nowTime - lastEval > this._areaMaxEvalInterval;\n    const changed = !lastCache || Object.keys(cacheObj).some(k => lastCache[k] !== cacheObj[k as keyof typeof cacheObj]);\n\n    if (!changed && !maxIntervalReached) {\n      return {};\n    }\n\n    this._areaSensorCache[area] = cacheObj;\n    this._areaLastEval[area] = nowTime;\n\n    return {\n      ...cacheObj,\n      target: Number(findState((e: any) => e.entity_id.endsWith('_temperature_target') && e.attributes.area_id === area)?.state ?? defaultTarget),\n      debug: this.debug\n    };\n  }\n\n  private _calculateTempChangeRate(area: string, states: any[]): number {\n    try {\n      const tempSensor = states.find(s => \n        s.attributes?.area_id === area && s.entity_id.includes('temperature')\n      );\n      if (tempSensor) {\n        const history = Array.isArray(tempSensor.attributes?.history) ? tempSensor.attributes.history : [];\n        if (history.length >= 2) {\n          const [latest, previous] = history.slice(-2);\n          const timeDiff = (latest.timestamp - previous.timestamp) / 3600000; // Convert ms to hours\n          if (timeDiff > 0) {\n            return (latest.value - previous.value) / timeDiff;\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error calculating temperature change rate:', error);\n    }\n    return 0;\n  }\n\n  private _evaluateNextArea() {\n    if (!this.hass?.states || !this.config?.areas) return;\n\n    const areas = this.config.areas.filter(a => a.enabled !== false);\n    if (areas.length === 0) return;\n\n    // Rotate to next area\n    this._currentAreaIndex = (this._currentAreaIndex + 1) % areas.length;\n    const area = areas[this._currentAreaIndex];\n\n    // Get all states\n    const states = Array.isArray(this.hass.states) ? this.hass.states : Object.values(this.hass.states);\n    \n    // Build context for rule evaluation\n    const usedSensors: Array<{ type: string; entity_id: string; value: any }> = [];\n    const context = this._buildContext(\n      area.area_id,\n      usedSensors,\n      states,\n      this.config.weather_entity || 'weather.home',\n      this.config.default_target || 21\n    );\n\n    if (this.engine && context) {\n      const evals = this.engine.evaluate(context);\n      this._areaResults[area.area_id] = {\n        area: area.name || area.area_id,\n        evals,\n        usedSensors\n      };\n      this.requestUpdate();\n    }\n  }\n}\n\n// Die Klasse ist jetzt komplett frei von jeglicher Darstellungs-/Farb-/Three.js-Logik für den Geist.\n// Die gesamte Visualisierung und Farblogik ist in Ghost3D ausgelagert.\n"]}